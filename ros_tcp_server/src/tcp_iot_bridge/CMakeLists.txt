cmake_minimum_required(VERSION 3.8)
project(tcp_iot_bridge)

if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
  add_compile_options(-Wall -Wextra -Wpedantic)
endif()

# find dependencies
find_package(ament_cmake REQUIRED)
find_package(rclcpp REQUIRED)
find_package(iot_bridge_interfaces REQUIRED)

# Add executable
add_executable(tcp_bridge_node src/tcp_bridge_node.cpp)

# Link against pthread for std::thread
find_package(Threads REQUIRED)
target_link_libraries(tcp_bridge_node Threads::Threads)

ament_target_dependencies(tcp_bridge_node
  "rclcpp"
  "iot_bridge_interfaces")

install(TARGETS
  tcp_bridge_node
  DESTINATION lib/${PROJECT_NAME}
)

if(BUILD_TESTING)
  find_package(ament_lint_auto REQUIRED)
  # the following line skips the linter which checks for copyrights
  # comment the line when a copyright and license is added to all source files
  set(ament_cmake_copyright_FOUND TRUE)
  # the following line skips cpplint (only works in a git repo)
  # comment the line when this package is in a git repo and when
  # a copyright and license is added to all source files
  set(ament_cmake_cpplint_FOUND TRUE)
  ament_lint_auto_find_test_dependencies()
endif()

ament_package()
